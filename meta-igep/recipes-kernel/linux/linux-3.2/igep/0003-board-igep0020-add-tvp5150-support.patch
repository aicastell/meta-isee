From 977089d251d75189daeee51e1a2352532b069c27 Mon Sep 17 00:00:00 2001
From: Enrico Butera <ebutera@users.berlios.de>
Date: Mon, 16 Jan 2012 16:53:06 +0100
Subject: [PATCH 3/9] board-igep0020: add tvp5150 support

Signed-off-by: Enrico Butera <ebutera@users.berlios.de>
---
 arch/arm/mach-omap2/board-igep0020.c |  127 ++++++++++++++++++++++++++++++++++
 1 files changed, 127 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-omap2/board-igep0020.c b/arch/arm/mach-omap2/board-igep0020.c
index d0a3f78..405bb69 100644
--- a/arch/arm/mach-omap2/board-igep0020.c
+++ b/arch/arm/mach-omap2/board-igep0020.c
@@ -34,11 +34,13 @@
 #include <video/omapdss.h>
 #include <video/omap-panel-dvi.h>
 #include <plat/onenand.h>
+#include <media/omap3isp.h>
 
 #include "mux.h"
 #include "hsmmc.h"
 #include "sdram-numonyx-m65kxxxxam.h"
 #include "common-board-devices.h"
+#include "devices.h"
 
 #define IGEP2_SMSC911X_CS       5
 #define IGEP2_SMSC911X_GPIO     176
@@ -55,6 +57,9 @@
 #define IGEP2_RC_GPIO_WIFI_NRESET  139
 #define IGEP2_RC_GPIO_BT_NRESET    137
 
+#define IGEP2_GPIO_TVP5151_PDN		126
+#define IGEP2_GPIO_TVP5151_RESET	167
+
 #define IGEP3_GPIO_LED0_GREEN	54
 #define IGEP3_GPIO_LED0_RED	53
 #define IGEP3_GPIO_LED1_RED	16
@@ -535,6 +540,125 @@ static struct i2c_board_info __initdata igep2_i2c3_boardinfo[] = {
 	},
 };
 
+#if defined(CONFIG_VIDEO_TVP5150) || defined(CONFIG_VIDEO_TVP5150_MODULE)
+
+static struct i2c_board_info igep00x0_camera_i2c_devices[] = {
+        {
+                I2C_BOARD_INFO("tvp5150", (0xb8 >> 1)),
+        },
+};
+
+static struct isp_subdev_i2c_board_info igep00x0_camera_primary_subdevs[] = {
+        {
+                .board_info = &igep00x0_camera_i2c_devices[0],
+                .i2c_adapter_id = 2,
+        },
+        { NULL, 0, },
+};
+
+static struct isp_v4l2_subdevs_group igep00x0_camera_subdevs[] = {
+        {
+                .subdevs = igep00x0_camera_primary_subdevs,
+                .interface = ISP_INTERFACE_PARALLEL,
+                .bus = { .parallel = {
+                                //.width                  = 8,
+                                .data_lane_shift        = 0,
+                                .clk_pol                = 0,
+                                .hs_pol                 = 0,
+                                .vs_pol                 = 0,
+                                .bridge         = ISP_BRIDGE_DISABLE,
+                                //.fldmode                = 1,
+                                //.is_bt656               = 1,
+                } },
+        },
+        { NULL, 0, },
+};
+
+static struct isp_platform_data isp_pdata = {
+        .subdevs = igep00x0_camera_subdevs,
+};
+
+static void __init igep00x0_camera_init(void)
+{
+        omap_mux_init_signal("cam_fld", OMAP_PIN_INPUT);
+        omap_mux_init_signal("cam_hs", OMAP_PIN_INPUT);
+        omap_mux_init_signal("cam_vs", OMAP_PIN_INPUT);
+        omap_mux_init_signal("cam_xclka", OMAP_PIN_INPUT);
+        omap_mux_init_signal("cam_pclk", OMAP_PIN_INPUT);
+        omap_mux_init_signal("cam_d0", OMAP_PIN_INPUT);
+        omap_mux_init_signal("cam_d1", OMAP_PIN_INPUT);
+        omap_mux_init_signal("cam_d2", OMAP_PIN_INPUT);
+        omap_mux_init_signal("cam_d3", OMAP_PIN_INPUT);
+        omap_mux_init_signal("cam_d4", OMAP_PIN_INPUT);
+        omap_mux_init_signal("cam_d5", OMAP_PIN_INPUT);
+        omap_mux_init_signal("cam_d6", OMAP_PIN_INPUT);
+        omap_mux_init_signal("cam_d7", OMAP_PIN_INPUT);
+        omap_mux_init_signal("cam_d8", OMAP_PIN_INPUT);
+        omap_mux_init_signal("cam_d9", OMAP_PIN_INPUT);
+        omap_mux_init_signal("cam_d10", OMAP_PIN_INPUT);
+        omap_mux_init_signal("cam_d11", OMAP_PIN_INPUT);
+
+        if (omap3_init_camera(&isp_pdata) < 0)
+                pr_warning("IGEP: Unable to register camera platform \n");
+}
+
+static void __init igep2_i2c2_init(void)
+{
+        /*
+         * From TVP5151 datasheet Table 3-8. Reset and Power-Down Modes
+         *   PDN RESETB CONFIGURATION
+         *    0    0    Reserved (unknown state)
+         *    0    1    Powers down the decoder
+         *    1    0    Resets the decoder
+         *    1    1    Normal operation
+         *
+         * If TVP5151_PDN and TPVP5151_RESET is set to 0 the I2C2_SDA line
+         * is forced to low level and all devices connected to I2C2 stop
+         * working, this affects to EEPROM connected to the same bus. By default
+         * we should configure these pins to logical 1 (Normal operation)
+         *
+         * OMAP3530 CBB package can have GPIO126 muxed on 2 pins: mmc1_dat4 and
+         * cam_strobe.
+         */
+        int ret;
+
+        //omap_mux_init_signal("cam_strobe.gpio_126", 0);
+        //omap_mux_init_signal("cam_wen.gpio_167", OMAP_PIN_OUTPUT);
+        omap_mux_init_gpio(IGEP2_GPIO_TVP5151_RESET, OMAP_PIN_OUTPUT);
+
+        if ((gpio_request(IGEP2_GPIO_TVP5151_PDN, "TVP5151 PDN") == 0) &&
+                (gpio_direction_output(IGEP2_GPIO_TVP5151_PDN, 0) == 0))
+                gpio_export(IGEP2_GPIO_TVP5151_PDN, 0);
+        else
+                pr_warning("IGEP: Could not obtain gpio TVP5151 PDN\n");
+
+        if ((gpio_request(IGEP2_GPIO_TVP5151_RESET, "TVP5151 RESET") == 0)
+                && (gpio_direction_output(IGEP2_GPIO_TVP5151_RESET, 0) == 0)) {
+                gpio_export(IGEP2_GPIO_TVP5151_RESET, 0);
+                /* Initialize TVP5151 power up sequence */
+                udelay(10);
+                gpio_set_value(IGEP2_GPIO_TVP5151_PDN, 1);
+                udelay(10);
+                gpio_set_value(IGEP2_GPIO_TVP5151_RESET, 1);
+                udelay(200);
+        } else
+                pr_warning("IGEP: Could not obtain gpio TVP5151 RESET\n");
+
+        ret = omap_register_i2c_bus(2, 400, NULL, 0);
+        //ret = omap_register_i2c_bus(2, 400, igep00x0_camera_i2c_devices, ARRAY_SIZE(igep00x0_camera_i2c_devices));
+
+        if (ret)
+                pr_warning("IGEP2: Could not register I2C2 bus (%d)\n", ret);
+
+}
+
+#else
+
+void __init igep00x0_camera_init(void) {}
+static void __init igep2_i2c2_init(void) {}
+
+#endif
+
 static void __init igep_i2c_init(void)
 {
 	int ret;
@@ -551,6 +675,8 @@ static void __init igep_i2c_init(void)
 		if (ret)
 			pr_warning("IGEP2: Could not register I2C3 bus (%d)\n", ret);
 
+		igep2_i2c2_init();
+
 		igep_twldata.keypad	= &igep2_keypad_pdata;
 		/* Get common pmic data */
 		omap3_pmic_get_config(&igep_twldata, TWL_COMMON_PDATA_AUDIO,
@@ -664,6 +790,7 @@ static void __init igep_init(void)
 	} else {
 		usbhs_init(&igep3_usbhs_bdata);
 	}
+	igep00x0_camera_init();
 }
 
 MACHINE_START(IGEP0020, "IGEP v2 board")
-- 
1.7.5.4

