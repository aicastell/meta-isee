From 1a595527ae97743f0621b17bdaf50e0c8edbae0e Mon Sep 17 00:00:00 2001
From: Enrico Butera <ebutera@users.berlios.de>
Date: Tue, 17 Jan 2012 15:12:18 +0100
Subject: [PATCH 12/12] omap-serial: Fix bug when transmitting more than 16
 bytes

Rebased patch from Javier Martinez Canillas:

Current driver used an inverted polarity to assert the RTS line.

This patch inverts the polarity and also removes the RTS change in
serial_omap_stop_tx() since the RTS line has to remain asserted until
the serial_omap_irq() is raised and the condition __serial_omap_tx_empty()
is true.

Signed-off-by: Enrico Butera <ebutera@users.berlios.de>
---
 drivers/tty/serial/omap-serial.c |    8 +++-----
 1 files changed, 3 insertions(+), 5 deletions(-)

diff --git a/drivers/tty/serial/omap-serial.c b/drivers/tty/serial/omap-serial.c
index 12049f2..3cc62d3 100644
--- a/drivers/tty/serial/omap-serial.c
+++ b/drivers/tty/serial/omap-serial.c
@@ -152,9 +152,9 @@ static inline void serial_omap_update_rts(struct uart_omap_port *up)
 	unsigned char mcr = up->mcr;
 
 	if (up->tx_in_progress)
-		mcr |= UART_MCR_RTS;
-	else
 		mcr &= ~UART_MCR_RTS;
+	else
+		mcr |= UART_MCR_RTS;
 
 	serial_out(up, UART_MCR, mcr);
 }
@@ -180,8 +180,6 @@ static void serial_omap_stop_tx(struct uart_port *port)
 		serial_omap_disable_ier_thri(up);
 	else {
 		up->tx_in_progress = 0;
-		if (rts_on_send(up))
-			serial_omap_update_rts(up);
 		up->tx_wait_end = 1;
 		serial_omap_thri_mode(up);
 		serial_omap_enable_ier_thri(up);
@@ -429,7 +427,7 @@ static inline irqreturn_t serial_omap_irq(int irq, void *dev_id)
 		serial_out(up, UART_IER, up->ier);
 		serial_out(up, UART_OMAP_SCR, 0);
 		if (rts_on_send(up))
-			serial_out(up, UART_MCR, up->mcr | UART_MCR_RTS);
+			serial_omap_update_rts(up);
 		spin_unlock_irqrestore(&up->port.lock, flags);
 		return IRQ_HANDLED;
 	}
-- 
1.7.5.4

